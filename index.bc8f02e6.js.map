{"mappings":"AAAA,SAASA,EAAKC,EAAWC,GACxBC,SAASC,cAAcH,GAAWI,UAAYH,ECC/C,SAASI,EAAYC,EAAeC,GACnC,IAAIC,EAAWF,EAAcE,SAEzBA,EALkB,MAMrBC,QAAQC,KAAK,sFACbF,EAPqB,MAUK,IAAvBF,EAAcK,KAKlBC,YAAW,KACVH,QAAQI,IAAIL,GACZD,IACAF,EAAYC,EAAeC,KACzBC,GARFC,QAAQI,IAAI,iBCRd,SAASC,EAAYC,GACpBb,SAASC,cAAc,iBAAiBa,iBAAiB,SAAS,WACjED,EAAMJ,MAAO,EACbN,EAAYU,GAAO,WAClBA,EAAME,OAAS,EACflB,EAAK,SAAUgB,EAAME,aCLxB,MAAMC,EAAQ,CACbD,MAAO,EACPT,SAAU,IACVG,MAAM,EACNQ,YAAa,GAGd,SAASC,IDGT,IAAoBL,ECFnBD,EAAYI,GDEOH,ECDRG,EDEXhB,SAASC,cAAc,gBAAgBa,iBAAiB,SAAS,WAChED,EAAMJ,MAAO,KAIf,SAAuBI,GACtBb,SAASC,cAAc,eAAea,iBAAiB,SAAS,WAC3DD,EAAMI,YAAcJ,EAAME,OAC7BlB,EAAK,eAAgB,qBAGtBA,EAAK,eAAgB,IAErBgB,EAAME,OAASF,EAAMI,YACrBJ,EAAMP,UAAY,GAClBO,EAAMI,aAAe,EAErBpB,EAAK,eAAgBgB,EAAMI,aAC3BpB,EAAK,SAAUgB,EAAME,UCnBtBI,CAAcH,GAIdT,QAAQI,IAAI,uBACZO,IACArB,EAAK,SAAUmB,EAAMD,OACrBlB,EAAK,eAAgBmB,EAAMC","sources":["utils/display.js","utils/tick.js","game/events.js","app.js"],"sourcesContent":["function draw(className, value) {\n\tdocument.querySelector(className).innerHTML = value;\n}\n\nexport {\n\tdraw\n};\n","var MINIMUM_INTERVAL = 300;\n\nfunction onlineTicks(intervalStore, cb) {\n\tvar interval = intervalStore.interval;\n\n\tif (interval < MINIMUM_INTERVAL) {\n\t\tconsole.warn('Attempted to use interval lower than minimum interval, setting interval to minimum');\n\t\tinterval = MINIMUM_INTERVAL;\n\t}\n\n\tif (intervalStore.exit === true) {\n\t\tconsole.log('Ticks stopped');\n\t\treturn;\n\t}\n\n\tsetTimeout(() => {\n\t\tconsole.log(interval);\n\t\tcb();\n\t\tonlineTicks(intervalStore, cb);\n\t}, interval);\n}\n\n// #TODO: Implement offline tick calculator\n// function offlineTicks(interval, cb) {\n// \t\n// }\n\nexport {\n\tonlineTicks\n};\n","import { draw } from '/utils/display.js';\nimport { onlineTicks } from '/utils/tick.js';\n\nfunction startButton(store) {\n\tdocument.querySelector('.startCounter').addEventListener('click', function () {\n\t\tstore.exit = false;\n\t\tonlineTicks(store, function() { \n\t\t\tstore.money += 1;\n\t\t\tdraw('.money', store.money);\n\t\t});\n\t});\n}\n\nfunction stopButton(store) {\n\tdocument.querySelector('.stopCounter').addEventListener('click', function () {\n\t\tstore.exit = true;\n\t});\n}\n\nfunction upgradeButton(store) {\n\tdocument.querySelector('.buyUpgrade').addEventListener('click', function () {\n\t\tif (store.upgradeCost > store.money) {\n\t\t\tdraw('.warningText', 'Not enough money!');\n\t\t}\n\n\t\tdraw('.warningText', '');\n\n\t\tstore.money -= store.upgradeCost;\n\t\tstore.interval -= 50;\n\t\tstore.upgradeCost *= 2;\n\n\t\tdraw('.upgradeCost', store.upgradeCost);\n\t\tdraw('.money', store.money);\n\t});\n}\n\nexport {\n\tstartButton,\n\tstopButton,\n\tupgradeButton\n};\n","import { draw } from '/utils/display.js';\nimport { startButton, stopButton, upgradeButton } from '/game/events.js';\n\nconst store = {\n\tmoney: 0,\n\tinterval: 1000,\n\texit: false,\n\tupgradeCost: 1\n};\n\nfunction bindEvents() {\n\tstartButton(store);\n\tstopButton(store);\n\tupgradeButton(store);\n}\n\nfunction init() {\n\tconsole.log('Application started');\n\tbindEvents();\n\tdraw('.money', store.money);\n\tdraw('.upgradeCost', store.upgradeCost);\n}\n\ninit();\n"],"names":["$3d1283c690f0bed0$export$e529deb2bfd496dc","className","value","document","querySelector","innerHTML","$c63a0215d81aa66d$export$547b13d7b8ab4e45","intervalStore","cb","interval","console","warn","exit","setTimeout","log","$6797e304a7b9719e$export$c19513be8e47ff73","store","addEventListener","money","$6b17f08f738443dc$var$store","upgradeCost","$6b17f08f738443dc$var$bindEvents","$6797e304a7b9719e$export$ad045ce89cf6f85"],"version":3,"file":"index.bc8f02e6.js.map"}